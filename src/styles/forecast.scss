@use './variables' as v;
@use './mixins' as m;

#forecast {
  position: relative;

  #link-homepage {
    position: absolute;
    top: 2%;
    left: 2%;

    justify-content: center;

    svg {
      fill: v.$white !important;
      fill-opacity: 0.9;
      height: 1.5rem !important;
      width: 1.5rem !important;
    }
  }

  grid-template-areas:
    'hero'
    'carrousel'
    'tiles';

  // Mobile: landscape
  @media (orientation: landscape) {
    grid-template-areas:
      'hero carrousel'
      'tiles tiles';
    grid-template-columns: repeat(auto-fit, 50%);
    grid-template-rows: 1fr;
  }
}
// hero section
#hero {
  padding-block-start: 6rem;
  align-items: center;
  text-align: center;
  color: v.$text-color;
  grid-area: hero;

  // Move backdrop-filter to a pseudo-element
  // to prevent it from affecting sibling components
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(1px) brightness(50%);
    background-color: transparent;
    z-index: -1;
  }

  #degree {
    font-size: 6rem;
    font-style: normal;
    font-weight: 400;
    line-height: 4.375rem;
    letter-spacing: 0.02338rem;
    margin-block: 0.75rem;
    position: relative;

    sup {
      font-size: 3rem;
      position: absolute;
      top: -30px;
    }
  }

  p {
    font-weight: 600;
    line-height: 1.5rem;
    letter-spacing: 0.02375rem;

    &#high,
    &#low {
      display: inline-block;
    }
  }

  #description {
    text-transform: uppercase;
    margin-block-start: 0.5rem;
    font-weight: 400;
    font-size: 0.9rem;
    opacity: 0.8;
  }

  img {
    width: 90%;
    margin-block-start: -15%;
    z-index: -1;
    filter: brightness(70%);
    opacity: 0.5;
  }

  // Mobile: landscape
  @media (orientation: landscape) {
    #hero-heading {
      font-size: 1.75rem;
    }

    img {
      width: 50%;
      margin-block-start: -10%;
      margin-inline-start: -50%;
    }
  }
}

#hero-heading {
  max-width: 80%;
  font-size: 2.125rem;
  font-weight: 400;
  line-height: 2.5625rem; /* 120.588% */
  letter-spacing: 0.02338rem;
}

#carrousel {
  padding-block-end: 0.625rem;
  margin-block-start: -140px;
  overflow-x: scroll;
  cursor: pointer;
  background-color: v.$dark-bg;
  color: v.$white;
  border-radius: 30px 30px 0 0;
  border-top: 1px solid #814bff8c;
  box-shadow: 0px -12px 60px 1px rgba(202, 176, 255, 0.4);
  grid-area: carrousel;

  // Hour in figma
  .item {
    flex-shrink: 0;
    align-items: center;
    width: 50px;
    margin-inline: 1rem;
    margin-block-start: 0.625rem;
    padding-block: 1rem 0.5rem;
    border-radius: 30px;
    background-color: #211b37;
    box-shadow: 0px 2px 3px 0px rgb(58 74 185 / 55%) inset;

    @media (orientation: landscape) {
      height: fit-content;
      align-self: center;
    }

    &#current {
      @include m.temp-gradient;
    }

    p {
      font-weight: 600;
    }

    span {
      font-weight: 400;
    }
  }

  @media (orientation: landscape) {
    height: 190px;
    width: 300px;
    margin-block-start: 6rem;
    border-radius: 30px;
  }
}

#tiles {
  padding: 20px;
  justify-content: center;
  grid-template-columns: repeat(auto-fit, 150px);
  grid-auto-rows: v.$row-height-mobile;
  grid-template-areas:
    'sunlight pressure'
    'humidity visibility'
    'wind feels_like';
  grid-row-gap: v.$grid-row-gap-mobile;
  grid-column-gap: v.$grid-col-gap-mobile;
  grid-area: tiles;
  @include m.tiles-gradient;

  // Mobile: landscape
  @media (orientation: landscape) {
    justify-content: space-around;
    grid-template-areas:
      'sunlight pressure humidity'
      'visibility wind feels_like';
    margin-block-start: -4.75rem;
    border-top: 1px solid rgb(129 75 255 / 27%);
    grid-row-gap: v.$grid-row-gap-mobile;
    grid-column-gap: v.$grid-col-gap-mobile;
  }
  // Tablet: portrait
  @media (min-width: v.$tablet-breakpoint) {
    grid-template-columns: repeat(auto-fit, 200px);
    grid-auto-rows: v.$row-height-tablet;
    grid-row-gap: v.$grid-row-gap-tablet;
    grid-column-gap: v.$grid-col-gap-tablet;
    //todo: row height?
  }

  // Tablet: landscape
  @media (min-width: v.$landscape-breakpoint) and (orientation: landscape) {
    grid-template-columns: repeat(auto-fit, 250px); // Adjust as needed
    grid-auto-rows: v.$row-height-mobile;
    grid-row-gap: v.$grid-row-gap-mobile;
    grid-column-gap: v.$grid-col-gap-mobile;
  }
}

.tile {
  background-color: v.$tile-bg;
  border: 1px solid v.$tile-border;
  border-radius: 25px;
  padding: 1.25rem;
  color: v.$text-color;
  height: 100%;

  p {
    font-size: 0.8rem;
  }

  .tile-large-text {
    font-size: 1.6rem;
    margin-bottom: auto;
  }
}

.tile-header {
  text-transform: uppercase;
  color: v.$grey;
  font-weight: 500;
  font-size: 0.9rem;
  margin-block-end: 0.25rem;

  &:before {
    display: inline-block;
    margin-inline-end: 12px;
    content: '';
    width: v.$icon-w;
    height: v.$icon-h;
    vertical-align: sub;
  }

  &#sunlight-header {
    background: url('../../src/assets/icons/sunrise.svg') no-repeat;
  }

  &#humidity-header {
    background: url('../../src/assets/icons/humidity.svg') no-repeat;
  }

  &#pressure-header {
    background: url('../../src/assets/icons/pressure.svg') no-repeat;
  }

  &#visibility-header {
    background: url('../../src/assets/icons/visibility.svg') no-repeat;
  }

  &#wind-header {
    background: url('../../src/assets/icons/wind.svg') no-repeat;
    background-size: contain;
  }

  &#feels-like-header {
    background: url('../../src/assets/icons/temp.svg') no-repeat;
    background-size: contain;
  }
}

#tile-sunlight {
  grid-area: sunlight;
  background-image: url('../../src/assets/sun_bg_line.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: 110%;
  background-blend-mode: overlay;
}

#tile-pressure {
  grid-area: pressure;
}

#tile-humidity {
  grid-area: humidity;
}

#tile-visibility {
  grid-area: visibility;
}

#tile-wind {
  grid-area: wind;
}

#tile-feels {
  grid-area: feels_like;
  justify-content: space-between;
}

#feels-like {
  font-size: 4rem;
}
